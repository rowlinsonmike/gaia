{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"GAIA"},{"location":"access/","text":"Access GAIA web app is presented on port 85. (localhost:85) The default administrator credentials are: username = gaia password = gaiaisawesome! You can add additional users via the Users page. You can update the admin and user passwords via the Reset Password option in the user profile towards the top right of the app.","title":"Access"},{"location":"access/#access","text":"GAIA web app is presented on port 85. (localhost:85) The default administrator credentials are: username = gaia password = gaiaisawesome! You can add additional users via the Users page. You can update the admin and user passwords via the Reset Password option in the user profile towards the top right of the app.","title":"Access"},{"location":"faq/","text":"FAQ Can I use GAIA if my terraform requires user input at the command line? No Can I use GAIA for any repos not in AWS CodeCommit? No","title":"FAQ"},{"location":"faq/#faq","text":"","title":"FAQ"},{"location":"faq/#can-i-use-gaia-if-my-terraform-requires-user-input-at-the-command-line","text":"No","title":"Can I use GAIA if my terraform requires user input at the command line?"},{"location":"faq/#can-i-use-gaia-for-any-repos-not-in-aws-codecommit","text":"No","title":"Can I use GAIA for any repos not in AWS CodeCommit?"},{"location":"install/","text":"Installation Prerequisites Make sure you have credentials for the AWS Account where your CodeCommit repos are. GAIA makes use of git-remote-codecommit for this. An Instance Profile attached to the EC2 instance will work as well. Deployment 1) Clone the repo 2) create an .env file in the root of the directory with the following content: SECRET_KEY - used to hash stored values in flask api AWS_DEFAULT_REGION - AWS operating region TERRAFORM_VERSION - Terraform version to be used by GAIA. The terraform version you include should be available via the following link - https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip Example .env file SECRET_KEY=SOMELONGSTRINGSHOULDGOHERE12345 AWS_DEFAULT_REGION=us-east-1 TERRAFORM_VERSION=1.2.3 3) From the root of the directory execute docker-compose docker-compose -f prod-docker-compose.yml up d 4) If running on ubuntu server! From the root of the directory run the following AFTER bringing up with the compose file. More on this here sudo chmod 777 ./docker/dynamodb","title":"Install"},{"location":"install/#installation","text":"","title":"Installation"},{"location":"install/#prerequisites","text":"Make sure you have credentials for the AWS Account where your CodeCommit repos are. GAIA makes use of git-remote-codecommit for this. An Instance Profile attached to the EC2 instance will work as well.","title":"Prerequisites"},{"location":"install/#deployment","text":"1) Clone the repo 2) create an .env file in the root of the directory with the following content: SECRET_KEY - used to hash stored values in flask api AWS_DEFAULT_REGION - AWS operating region TERRAFORM_VERSION - Terraform version to be used by GAIA. The terraform version you include should be available via the following link - https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip Example .env file SECRET_KEY=SOMELONGSTRINGSHOULDGOHERE12345 AWS_DEFAULT_REGION=us-east-1 TERRAFORM_VERSION=1.2.3 3) From the root of the directory execute docker-compose docker-compose -f prod-docker-compose.yml up d 4) If running on ubuntu server! From the root of the directory run the following AFTER bringing up with the compose file. More on this here sudo chmod 777 ./docker/dynamodb","title":"Deployment"},{"location":"job/","text":"Add a Job Navigate to a project within the Projects page. In the project's page, Click on Add Job Fill in the form Job Name can be any string that describes the reason for applying the terraform Click on Add Job Once a job has been added, GAIA will begin working on the repo. The following is a breakdown of the datapoints being collected. linting ( tflint ) static code analysis ( kics ). capture terraform plan create graph data in drawio format These datapoints are presented back to the end user within the job's page. After reviewing the content, selecting Approve Apply will initiate GAIA to run terraform apply against the current plan. Terraform output will be appended to the datapoints in the job's page.","title":"Add A Job"},{"location":"job/#add-a-job","text":"Navigate to a project within the Projects page. In the project's page, Click on Add Job Fill in the form Job Name can be any string that describes the reason for applying the terraform Click on Add Job Once a job has been added, GAIA will begin working on the repo. The following is a breakdown of the datapoints being collected. linting ( tflint ) static code analysis ( kics ). capture terraform plan create graph data in drawio format These datapoints are presented back to the end user within the job's page. After reviewing the content, selecting Approve Apply will initiate GAIA to run terraform apply against the current plan. Terraform output will be appended to the datapoints in the job's page.","title":"Add a Job"},{"location":"overview/","text":"Overiew Work in Progress! GAIA helps manage the lifecycle of terraform deployments stored in AWS CodeCommit. Key Features \ud83d\uded2 terraform version selection \ud83e\uddf9 terraform linting \ud83d\udc1b static code analysis \ud83d\uddfa\ufe0f terraform plan capture \ud83d\udcca terraform state visualization \u2705 terraform apply capture \ud83d\udccd user action tracking Vocabulary Projects - reference to an AWS CodeCommit repo and where in the repo terraform should be running. Jobs - staged execution of the given project via terraform.","title":"Overview"},{"location":"overview/#overiew","text":"Work in Progress! GAIA helps manage the lifecycle of terraform deployments stored in AWS CodeCommit.","title":"Overiew"},{"location":"overview/#key-features","text":"\ud83d\uded2 terraform version selection \ud83e\uddf9 terraform linting \ud83d\udc1b static code analysis \ud83d\uddfa\ufe0f terraform plan capture \ud83d\udcca terraform state visualization \u2705 terraform apply capture \ud83d\udccd user action tracking","title":"Key Features"},{"location":"overview/#vocabulary","text":"Projects - reference to an AWS CodeCommit repo and where in the repo terraform should be running. Jobs - staged execution of the given project via terraform.","title":"Vocabulary"},{"location":"project/","text":"Add a Project Navigate to the Projects page. Click on Add Project Fill in the form Project Name can be any string that describes the project CodeCommit Project Name should be the actual repo name of your codecommit Repo Path the path within the repo where your main.tf file exists. Do not use a \"/\" at the beginning of this path Click on Add Project","title":"Add A Project"},{"location":"project/#add-a-project","text":"Navigate to the Projects page. Click on Add Project Fill in the form Project Name can be any string that describes the project CodeCommit Project Name should be the actual repo name of your codecommit Repo Path the path within the repo where your main.tf file exists. Do not use a \"/\" at the beginning of this path Click on Add Project","title":"Add a Project"},{"location":"roadmap/","text":"Roadmap Some current objectives and their projected timeline - well architected production deployment (short term) Report generation (short term) Advanced terraform configurations for projects (short term) Event driven projects that kick off jobs based on commits (mid term)","title":"Roadmap"},{"location":"roadmap/#roadmap","text":"Some current objectives and their projected timeline - well architected production deployment (short term) Report generation (short term) Advanced terraform configurations for projects (short term) Event driven projects that kick off jobs based on commits (mid term)","title":"Roadmap"},{"location":"tech/","text":"Tech Stack GAIA uses the following tech: - - project and job metadata - - job queue - - API - - web app - - serve web app + reverse proxy - - deploy containers - - manage IaC","title":"Tech Stack"},{"location":"tech/#tech-stack","text":"GAIA uses the following tech: - - project and job metadata - - job queue - - API - - web app - - serve web app + reverse proxy - - deploy containers - - manage IaC","title":"Tech Stack"}]}